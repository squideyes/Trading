// ********************************************************
// Copyright (C) 2021 Louis S. Berman (louis@squideyes.com)
//
// This file is part of SquidEyes.Trading
//
// The use of this source code is licensed under the terms
// of the MIT License (https://opensource.org/licenses/MIT)
// ********************************************************

using FluentAssertions;
using SquidEyes.Trading.Context;
using SquidEyes.Trading.Indicators;
using SquidEyes.UnitTests.Testing;
using Xunit;

namespace SquidEyes.UnitTests.Indicators;

public class KamaIndicatorTests
{
    [Fact]
    public void KamaIndicatorBaseline()
    {
        var results = new double[]
        {
            1.11663997, 1.11651003, 1.11633003, 1.11608005, 1.11608005, 1.11609006,
            1.11607003, 1.11617994, 1.11612999, 1.11610997, 1.11610997, 1.11609982,
            1.11609761, 1.11611036, 1.11612256, 1.11615198, 1.11617180, 1.11620194,
            1.11622270, 1.11623535, 1.11625020, 1.11625816, 1.11625624, 1.11625006,
            1.11625201, 1.11625836, 1.11626126, 1.11626773, 1.11627425, 1.11628365,
            1.11629217, 1.11629730, 1.11631565, 1.11633268, 1.11633735, 1.11633801,
            1.11634002, 1.11634105, 1.11633855, 1.11633633, 1.11633686, 1.11633696,
            1.11633006, 1.11632110, 1.11631803, 1.11631541, 1.11630946, 1.11630866,
            1.11631060, 1.11631392, 1.11631385, 1.11631378, 1.11631679, 1.11633726,
            1.11635616, 1.11636440, 1.11637689, 1.11638948, 1.11639285, 1.11639679,
            1.11641497, 1.11643221, 1.11644691, 1.11646473, 1.11648995, 1.11652854,
            1.11656764, 1.11657310, 1.11657973, 1.11658715, 1.11659248, 1.11659215,
            1.11658969, 1.11658970, 1.11658586, 1.11658557, 1.11657476, 1.11656177,
            1.11654973, 1.11653274, 1.11651525, 1.11649552, 1.11648806, 1.11648640,
            1.11648563, 1.11648251, 1.11648153, 1.11648040, 1.11647980, 1.11647864,
            1.11647569, 1.11647119, 1.11646836, 1.11644901, 1.11643616, 1.11642917,
            1.11641910, 1.11639440, 1.11635015, 1.11629970, 1.11627440, 1.11626698,
            1.11626096, 1.11624590, 1.11623435, 1.11623146, 1.11622878, 1.11622619,
            1.11622979, 1.11623074, 1.11622928, 1.11622663, 1.11623545, 1.11623845,
            1.11624369, 1.11624831, 1.11625798, 1.11626823, 1.11627892, 1.11628404,
            1.11629157, 1.11630814, 1.11631000, 1.11632323, 1.11635560, 1.11636422,
            1.11637303, 1.11638301, 1.11639830, 1.11643397, 1.11647972, 1.11655896,
            1.11667401, 1.11673937, 1.11679155, 1.11687145, 1.11691830, 1.11698028,
            1.11704325, 1.11714756, 1.11727056, 1.11737225, 1.11744110, 1.11758541,
            1.11769563, 1.11776571, 1.11788325, 1.11799458, 1.11813656, 1.11820228,
            1.11822670, 1.11827643, 1.11831393, 1.11834226, 1.11837588, 1.11841571,
            1.11845666, 1.11851429, 1.11856018, 1.11859312, 1.11865474, 1.11871009,
            1.11881418, 1.11886767, 1.11890937, 1.11895944, 1.11901062, 1.11903646,
            1.11906007, 1.11907467, 1.11909137, 1.11911438, 1.11914993, 1.11917605,
            1.11919850, 1.11922163, 1.11925262, 1.11927882, 1.11929489, 1.11930309,
            1.11932238, 1.11933009, 1.11933097, 1.11933412, 1.11933866, 1.11934268,
            1.11935005, 1.11936083, 1.11937823, 1.11938512, 1.11939446, 1.11940061,
            1.11942348, 1.11942861, 1.11943007, 1.11943257, 1.11943194, 1.11943347,
            1.11943277, 1.11940831, 1.11937791, 1.11933261, 1.11926362, 1.11917936,
            1.11914051, 1.11910713, 1.11908046, 1.11904389, 1.11899335, 1.11898771,
            1.11898430, 1.11897340, 1.11895796, 1.11894795, 1.11894429, 1.11894252,
            1.11893519, 1.11892511, 1.11890871, 1.11890302, 1.11889334, 1.11888792,
            1.11888212, 1.11887740, 1.11887332, 1.11886864, 1.11886438, 1.11885967,
            1.11885201, 1.11886697, 1.11890731, 1.11897538, 1.11902305, 1.11904004,
            1.11904842, 1.11906236, 1.11906613, 1.11906914, 1.11907435, 1.11909032,
            1.11909632, 1.11910287, 1.11910863, 1.11911585, 1.11913696, 1.11915121,
            1.11917346, 1.11919922, 1.11923119, 1.11924149, 1.11924349, 1.11924204,
            1.11924108, 1.11924178, 1.11923816, 1.11922663, 1.11921951, 1.11921871,
            1.11919649, 1.11917523, 1.11915506, 1.11914783, 1.11913695, 1.11913680,
            1.11913610, 1.11913355, 1.11913120, 1.11913077, 1.11912853, 1.11912579,
            1.11912412, 1.11912158, 1.11911913, 1.11911776, 1.11912200, 1.11913606,
            1.11914444, 1.11915510, 1.11916888, 1.11917974, 1.11918839, 1.11920978,
            1.11923350, 1.11925602, 1.11928137, 1.11932381, 1.11935325, 1.11937417
        };

        var indicator = new KamaIndicator(
            10, 5, 15, Known.Pairs[Symbol.EURUSD], RateToUse.Close);

        var candles = IndicatorData.GetCandles();

        candles.Count.Should().Be(results.Length);

        for (var i = 0; i < candles.Count; i++)
        {
            indicator.AddAndCalc(candles[i]).Value
                .Should().BeApproximately(results[i], 8);
        }
    }
}